// Code generated by MockGen. DO NOT EDIT.
// Source: user_delete.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDeleteUseCase is a mock of DeleteUseCase interface.
type MockDeleteUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteUseCaseMockRecorder
}

// MockDeleteUseCaseMockRecorder is the mock recorder for MockDeleteUseCase.
type MockDeleteUseCaseMockRecorder struct {
	mock *MockDeleteUseCase
}

// NewMockDeleteUseCase creates a new mock instance.
func NewMockDeleteUseCase(ctrl *gomock.Controller) *MockDeleteUseCase {
	mock := &MockDeleteUseCase{ctrl: ctrl}
	mock.recorder = &MockDeleteUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteUseCase) EXPECT() *MockDeleteUseCaseMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockDeleteUseCase) Execute(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockDeleteUseCaseMockRecorder) Execute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockDeleteUseCase)(nil).Execute), arg0)
}

// MockDeleteRepository is a mock of DeleteRepository interface.
type MockDeleteRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDeleteRepositoryMockRecorder
}

// MockDeleteRepositoryMockRecorder is the mock recorder for MockDeleteRepository.
type MockDeleteRepositoryMockRecorder struct {
	mock *MockDeleteRepository
}

// NewMockDeleteRepository creates a new mock instance.
func NewMockDeleteRepository(ctrl *gomock.Controller) *MockDeleteRepository {
	mock := &MockDeleteRepository{ctrl: ctrl}
	mock.recorder = &MockDeleteRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeleteRepository) EXPECT() *MockDeleteRepositoryMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockDeleteRepository) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockDeleteRepositoryMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDeleteRepository)(nil).Delete), arg0)
}
